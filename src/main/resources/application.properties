server.port = 8082
spring.datasource.url=jdbc:postgresql://localhost/consiliumora
spring.datasource.username=postgres
spring.datasource.password=${dbPassword}
spring.jpa.generate-ddl=true



spring.security.oauth2.client.registration.google.client-id=${googleClientId}
spring.security.oauth2.client.registration.google.client-secret=${googleSecretId}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.facebook.client-id=${facebookClientId}
spring.security.oauth2.client.registration.facebook.client-secret=${facebookSecretId}
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
spring.security.oauth2.client.registration.github.client-id=${githubClientId}
spring.security.oauth2.client.registration.github.client-secret=${githubSecretId}
spring.security.oauth2.client.registration.github.scope=user:emails,read:user
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
spring.security.oauth2.client.registration.vk.client-id=${vkClientId}
spring.security.oauth2.client.registration.vk.client-secret=${vkSecretId}
spring.security.oauth2.client.registration.vk.scope=email
spring.security.oauth2.client.registration.vk.client-authentication-method=post
spring.security.oauth2.client.registration.vk.provider=vk
spring.security.oauth2.client.registration.vk.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.vk.redirect-uri=http://localhost:8082/login/oauth2/code/vk
spring.security.oauth2.client.provider.vk.authorization-uri=https://oauth.vk.com/authorize?v=5.95
spring.security.oauth2.client.provider.vk.token-uri=https://oauth.vk.com/access_token
spring.security.oauth2.client.provider.vk.user-info-uri=https://api.vk.com/method/users.get?{user_id}&v=5.95&fields=photo_max&display=popup&lang=ru
spring.security.oauth2.client.registration.ok.client-id=${okClientId}
spring.security.oauth2.client.registration.ok.client-secret=${okSecretId}
spring.security.oauth2.client.registration.ok.scope=GET_EMAIL
spring.security.oauth2.client.registration.ok.client-authentication-method=post
spring.security.oauth2.client.registration.ok.provider=ok
spring.security.oauth2.client.registration.ok.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.ok.redirect-uri=http://localhost:8082/login/oauth2/code/ok
spring.security.oauth2.client.provider.ok.authorization-uri=https://connect.ok.ru/oauth/authorize
spring.security.oauth2.client.provider.ok.token-uri=https://api.ok.ru/oauth/token.do
spring.security.oauth2.client.provider.ok.user-info-uri=https://api.ok.ru/fb.do?application_key=${okKey}&format=json&method=users.getCurrentUser&sig={sig}&access_token=
